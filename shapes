<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Interactive Shapes with Words</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js"></script>
</head>
<body>
  <script>
    let words = ["I blend", "Creativity", "Functionality", "Empathy", "Innovation", "to craft intuitive experiences."];
    let shapes = [];
    let currentIndex = 0;

    function setup() {
      createCanvas(windowWidth, windowHeight);
      textAlign(CENTER, CENTER);
      textSize(32);

      // Initialize shapes for each word
      for (let i = 0; i < words.length; i++) {
        let x = width / 2;
        let y = height / 2 + (i - words.length / 2) * 100;
        let w = 300;
        let h = 80;
        shapes.push(new WordShape(x, y, w, h, words[i]));
      }
    }

    function draw() {
      background(255);

      // Update and display each shape
      for (let i = 0; i < shapes.length; i++) {
        let wordShape = shapes[i];
        wordShape.update();
        wordShape.display();
      }
    }

    // WordShape class to represent each word with its shape
    class WordShape {
      constructor(x, y, w, h, text) {
        this.x = x;
        this.y = y;
        this.w = w;
        this.h = h;
        this.text = text;
        this.size = 32;
        this.isActive = false;
      }

      update() {
        // Make the current shape grow and others shrink
        if (this.text === words[currentIndex]) {
          this.isActive = true;
          this.size = lerp(this.size, 64, 0.1); // Gradually grow
        } else {
          this.isActive = false;
          this.size = lerp(this.size, 32, 0.1); // Shrink back to normal size
        }
      }

      display() {
        fill(this.isActive ? 'orange' : 'gray');
        stroke(0);
        strokeWeight(2);
        rectMode(CENTER);
        rect(this.x, this.y, this.w, this.h);

        fill(0);
        noStroke();
        textSize(this.size);
        text(this.text, this.x, this.y);
      }
    }

    function mousePressed() {
      currentIndex = (currentIndex + 1) % words.length;
    }
  </script>
</body>
</html>
